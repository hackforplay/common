# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release

on:
  push:
    branches:
      - '*'
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check if GitHub token is valid
        run: |
          echo "Validating GitHub token permissions..."
          response_code=$(curl -o /tmp/github_api_response.txt -s -w "%{http_code}\n" \
                     -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                     -H "Accept: application/vnd.github.v3+json" \
                     https://api.github.com/repos/${{ github.repository }})

          if [ "$response_code" -ne 200 ]; then
            echo "::error::GitHub token validation failed with HTTP status: $response_code"
            echo "Response body:"
            cat /tmp/github_api_response.txt
            echo "GitHub token has insufficient permissions or is invalid"
            exit 1
          else
            echo "GitHub token validation successful!"
          fi

      - uses: actions/checkout@v5
      - name: Setup gcloud environment
        uses: google-github-actions/auth@v3
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.5'
      - run: npm ci
      - name: Run semantic-release
        run: |
          echo "Running semantic-release from packages/game directory..."
          # Set DEBUG environment variable to get more detailed logs
          export DEBUG=semantic-release:*
          cd packages/game
          npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          # Add RUNNER_DEBUG for more verbose GitHub Actions logs
          RUNNER_DEBUG: 1
      - run: |
          npm run build
          npm test
        if: ${{ github.event_name == 'pull_request' }}
      - run: |
          echo $GITHUB_REF
          PATCH_VERSION=${GITHUB_REF/refs\/tags\/v/}
          MINOR_VERSION=${PATCH_VERSION%.*}
          echo $PATCH_VERSION
          echo $MINOR_VERSION
          echo ${{ github.event_name }}
      - name: Build and Upload
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          npm run build
          cd packages/game
          PATCH_VERSION=${GITHUB_REF/refs\/tags\/v/}
          MINOR_VERSION=${PATCH_VERSION%.*}
          echo $PATCH_VERSION
          echo $MINOR_VERSION
          # https://bit.ly/2xzjGVO
          gsutil cp -r dist gs://cdn.hackforplay.xyz/common/${PATCH_VERSION}
          gsutil cp -r 'dist/**' gs://cdn.hackforplay.xyz/common/${MINOR_VERSION}
          gsutil cp -r 'dist/ja/*' gs://cdn.hackforplay.xyz/common/${MINOR_VERSION}/ja/
